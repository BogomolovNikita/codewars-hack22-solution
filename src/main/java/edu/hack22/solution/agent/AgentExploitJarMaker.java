package edu.hack22.solution.agent;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.jar.JarEntry;
import java.util.jar.JarOutputStream;

@SuppressWarnings(value = "all")
public class AgentExploitJarMaker {
    public static void makeJar(String javaAgentPath) throws IOException {
        System.out.println(AgentExploitJarManifestHolder.getManifest().toString());
        JarOutputStream jarOutputStream = new JarOutputStream(
                Files.newOutputStream(Paths.get(javaAgentPath)),
                AgentExploitJarManifestHolder.getManifest());
        addClassInJar(AgentExploit.class, jarOutputStream);
        addClassInJar(ClassFileTransformerImpl.class, jarOutputStream);
        jarOutputStream.close();
    }

    private static void addClassInJar(Class<?> clazz, JarOutputStream jarOutputStream) throws IOException {
        String pathToClassFile = clazz.getName()
                .replace('.', '/')
                .concat(".class");
        jarOutputStream.putNextEntry(new JarEntry(pathToClassFile));
        byte [] bytesClass = covertToByteArray(clazz.getClassLoader().getResourceAsStream(pathToClassFile));
        jarOutputStream.write(bytesClass);
        jarOutputStream.closeEntry();
    }

    private static byte[] covertToByteArray(InputStream inputStream) throws IOException {
        ByteArrayOutputStream buffer = new ByteArrayOutputStream();
        int nRead;
        byte[] data = new byte[16384];
        while ((nRead = inputStream.read(data, 0, data.length)) != -1) {
            buffer.write(data, 0, nRead);
        }
        return buffer.toByteArray();
    }
}
